{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongoDB","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongoDB","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongoDB","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongoDB","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongoDB","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongoDB","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongoDB","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongoDB","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongoDB","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at model.Query.exec (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\query.js:4360:21)\n    at model.Query.Object.<anonymous>.Query.then (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\query.js:4454:15)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at model.Query.exec (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\query.js:4360:21)\n    at model.Query.Object.<anonymous>.Query.then (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\query.js:4454:15)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at model.Query.exec (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\query.js:4360:21)\n    at model.Query.Object.<anonymous>.Query.then (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\query.js:4454:15)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"level":"error","message":"mongoose is not defined mongoose is not defined","stack":"ReferenceError: mongoose is not defined\n    at Object.<anonymous>.router.get (H:\\Development\\node-course-projects\\vidly-mosh\\routes\\genres.js:28:3)\n    at newFn (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at jsonParser (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\body-parser\\lib\\types\\json.js:110:7)\n    at newFn (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"error","message":"mongoose is not defined mongoose is not defined","stack":"ReferenceError: mongoose is not defined\n    at Object.<anonymous>.router.get (H:\\Development\\node-course-projects\\vidly-mosh\\routes\\genres.js:28:3)\n    at newFn (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at jsonParser (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\body-parser\\lib\\types\\json.js:110:7)\n    at newFn (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\express-async-errors\\index.js:16:20)"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at model.Query.exec (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\query.js:4360:21)\n    at model.Query.Object.<anonymous>.Query.then (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\query.js:4454:15)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at model.Query.exec (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\query.js:4360:21)\n    at model.Query.Object.<anonymous>.Query.then (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\query.js:4454:15)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at model.Query.exec (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\query.js:4360:21)\n    at model.Query.Object.<anonymous>.Query.then (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\query.js:4454:15)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at model.Query.exec (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\query.js:4360:21)\n    at model.Query.Object.<anonymous>.Query.then (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\query.js:4454:15)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at model.Query.exec (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\query.js:4360:21)\n    at model.Query.Object.<anonymous>.Query.then (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\query.js:4454:15)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at model.Query.exec (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\query.js:4360:21)\n    at model.Query.Object.<anonymous>.Query.then (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\query.js:4454:15)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"errors":{"name":{"name":"ValidatorError","message":"Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).","properties":{"message":"Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).","type":"maxlength","maxlength":50,"path":"name","value":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"},"kind":"maxlength","path":"name","value":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"}},"_message":"Genre validation failed","level":"error","message":"Genre validation failed: name: Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50). Genre validation failed: name: Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).","stack":"ValidationError: Genre validation failed: name: Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).\n    at model.Object.<anonymous>.Document.invalidate (H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\document.js:2691:32)\n    at H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\document.js:2512:17\n    at H:\\Development\\node-course-projects\\vidly-mosh\\node_modules\\mongoose\\lib\\schematype.js:1241:9\n    at process._tickCallback (internal/process/next_tick.js:61:11)"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
{"message":"listening to port 3000","level":"info"}
{"message":"connected to mongodb://localhost/vidly_tests","level":"info"}
